{"ast":null,"code":"import { combineReducers } from \"@reduxjs/toolkit\";\nimport workitkick from \"./sounds/workitkick.wav\";\nimport melodykick from \"./sounds/melodykick.wav\";\nimport monicahit from \"./sounds/monica-hit.wav\";\nimport movehit from \"./sounds/move-hit.wav\";\nimport naturekick from \"./sounds/nature-kick.wav\";\nimport ptroy from \"./sounds/p-troy.wav\";\nimport pharellhit from \"./sounds/pharell-hit.wav\";\nimport pianohit from \"./sounds/piano-hit.wav\";\nimport pimphit from \"./sounds/pimp-hit.wav\";\nconst sounds = [[{\n  name: \"work it kick\",\n  src: workitkick\n}, {\n  name: \"melody kick\",\n  src: melodykick\n}, {\n  name: \"monica hit\",\n  src: monicahit\n}, {\n  name: \"move hit\",\n  src: movehit\n}, {\n  name: \"nature kick\",\n  src: naturekick\n}, {\n  name: \"p-troy\",\n  src: ptroy\n}, {\n  name: \"pharell hit\",\n  src: pharellhit\n}, {\n  name: \"piano hit\",\n  src: pianohit\n}, {\n  name: \"pimp hit\",\n  src: pimphit\n}]];\nconst soundsReducer = (state = {\n  sounds: sounds[0],\n  index: 0\n}, action) => {\n  switch (action.type) {\n    case \"CHANGE_SOUND\":\n      const index = state.index + 1;\n      if (index < sounds.length) {\n        return {\n          sounds: sounds[index],\n          index: index\n        };\n      } else {\n        return {\n          sounds: sounds[0],\n          index: 0\n        };\n      }\n    default:\n      return state;\n  }\n};\nconst displayReducer = (state = {\n  display: \"\"\n}, action) => {\n  switch (action.type) {\n    case \"DISPLAY\":\n      return {\n        display: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst rootReducer = combineReducers({\n  sounds: soundsReducer,\n  display: displayReducer\n\n  // Add reducers here\n});\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","workitkick","melodykick","monicahit","movehit","naturekick","ptroy","pharellhit","pianohit","pimphit","sounds","name","src","soundsReducer","state","index","action","type","length","displayReducer","display","payload","rootReducer"],"sources":["/Users/davidwisseh/Documents/drum-machine/src/reducers.js"],"sourcesContent":["import { combineReducers } from \"@reduxjs/toolkit\";\nimport workitkick from \"./sounds/workitkick.wav\";\nimport melodykick from \"./sounds/melodykick.wav\";\nimport monicahit from \"./sounds/monica-hit.wav\";\nimport movehit from \"./sounds/move-hit.wav\";\nimport naturekick from \"./sounds/nature-kick.wav\";\nimport ptroy from \"./sounds/p-troy.wav\";\nimport pharellhit from \"./sounds/pharell-hit.wav\";\nimport pianohit from \"./sounds/piano-hit.wav\";\nimport pimphit from \"./sounds/pimp-hit.wav\";\n\nconst sounds = [\n  [\n    { name: \"work it kick\", src: workitkick },\n    { name: \"melody kick\", src: melodykick },\n    { name: \"monica hit\", src: monicahit },\n    { name: \"move hit\", src: movehit },\n    { name: \"nature kick\", src: naturekick },\n    { name: \"p-troy\", src: ptroy },\n    { name: \"pharell hit\", src: pharellhit },\n    { name: \"piano hit\", src: pianohit },\n    { name: \"pimp hit\", src: pimphit },\n  ],\n];\n\nconst soundsReducer = (state = { sounds: sounds[0], index: 0 }, action) => {\n  switch (action.type) {\n    case \"CHANGE_SOUND\":\n      const index = state.index + 1;\n      if (index < sounds.length) {\n        return { sounds: sounds[index], index: index };\n      } else {\n        return { sounds: sounds[0], index: 0 };\n      }\n    default:\n      return state;\n  }\n};\n\nconst displayReducer = (state = { display: \"\" }, action) => {\n  switch (action.type) {\n    case \"DISPLAY\":\n      return { display: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  sounds: soundsReducer,\n  display: displayReducer,\n\n  // Add reducers here\n});\n\nexport default rootReducer;\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,OAAO,MAAM,uBAAuB;AAE3C,MAAMC,MAAM,GAAG,CACb,CACE;EAAEC,IAAI,EAAE,cAAc;EAAEC,GAAG,EAAEX;AAAW,CAAC,EACzC;EAAEU,IAAI,EAAE,aAAa;EAAEC,GAAG,EAAEV;AAAW,CAAC,EACxC;EAAES,IAAI,EAAE,YAAY;EAAEC,GAAG,EAAET;AAAU,CAAC,EACtC;EAAEQ,IAAI,EAAE,UAAU;EAAEC,GAAG,EAAER;AAAQ,CAAC,EAClC;EAAEO,IAAI,EAAE,aAAa;EAAEC,GAAG,EAAEP;AAAW,CAAC,EACxC;EAAEM,IAAI,EAAE,QAAQ;EAAEC,GAAG,EAAEN;AAAM,CAAC,EAC9B;EAAEK,IAAI,EAAE,aAAa;EAAEC,GAAG,EAAEL;AAAW,CAAC,EACxC;EAAEI,IAAI,EAAE,WAAW;EAAEC,GAAG,EAAEJ;AAAS,CAAC,EACpC;EAAEG,IAAI,EAAE,UAAU;EAAEC,GAAG,EAAEH;AAAQ,CAAC,CACnC,CACF;AAED,MAAMI,aAAa,GAAGA,CAACC,KAAK,GAAG;EAAEJ,MAAM,EAAEA,MAAM,CAAC,CAAC,CAAC;EAAEK,KAAK,EAAE;AAAE,CAAC,EAAEC,MAAM,KAAK;EACzE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,MAAMF,KAAK,GAAGD,KAAK,CAACC,KAAK,GAAG,CAAC;MAC7B,IAAIA,KAAK,GAAGL,MAAM,CAACQ,MAAM,EAAE;QACzB,OAAO;UAAER,MAAM,EAAEA,MAAM,CAACK,KAAK,CAAC;UAAEA,KAAK,EAAEA;QAAM,CAAC;MAChD,CAAC,MAAM;QACL,OAAO;UAAEL,MAAM,EAAEA,MAAM,CAAC,CAAC,CAAC;UAAEK,KAAK,EAAE;QAAE,CAAC;MACxC;IACF;MACE,OAAOD,KAAK;EAChB;AACF,CAAC;AAED,MAAMK,cAAc,GAAGA,CAACL,KAAK,GAAG;EAAEM,OAAO,EAAE;AAAG,CAAC,EAAEJ,MAAM,KAAK;EAC1D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,OAAO;QAAEG,OAAO,EAAEJ,MAAM,CAACK;MAAQ,CAAC;IACpC;MACE,OAAOP,KAAK;EAChB;AACF,CAAC;AAED,MAAMQ,WAAW,GAAGtB,eAAe,CAAC;EAClCU,MAAM,EAAEG,aAAa;EACrBO,OAAO,EAAED;;EAET;AACF,CAAC,CAAC;AAEF,eAAeG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}