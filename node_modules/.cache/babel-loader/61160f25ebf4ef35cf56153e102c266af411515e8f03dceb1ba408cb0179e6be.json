{"ast":null,"code":"var _jsxFileName = \"/Users/davidwisseh/Documents/drum-machine/src/components/main.js\",\n  _s2 = $RefreshSig$();\nimport DrumPad from \"./drumPad\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./main.css\";\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const sounds = useSelector(state => state.sounds.sounds);\n  const letters = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\n  const display = useSelector(state => state.display);\n  const changeVolume = e => {\n    _s();\n    const volume = e.target.value;\n    useDispatch({\n      type: \"VOLUME\",\n      payload: volume\n    });\n  };\n  _s(changeVolume, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n    return [useDispatch];\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    id: \"drum-machine\",\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"drum-pad-section\",\n      children: sounds.map((sound, index) => /*#__PURE__*/_jsxDEV(DrumPad, {\n        name: sound.name,\n        letter: letters[index],\n        index: index,\n        src: sound.src\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"display\",\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"slider-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"volume\",\n        name: \"volume\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s2(Main, \"5FfwPcxR5+ti03eIzVojv0sXvds=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["DrumPad","useDispatch","useSelector","Container","jsxDEV","_jsxDEV","Main","_s2","_s","$RefreshSig$","sounds","state","letters","display","changeVolume","e","volume","target","value","type","payload","id","className","children","map","sound","index","name","letter","src","fileName","_jsxFileName","lineNumber","columnNumber","min","max","step","_c","$RefreshReg$"],"sources":["/Users/davidwisseh/Documents/drum-machine/src/components/main.js"],"sourcesContent":["import DrumPad from \"./drumPad\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./main.css\";\nimport { Container } from \"react-bootstrap\";\nconst Main = () => {\n  const sounds = useSelector((state) => state.sounds.sounds);\n  const letters = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\n  const display = useSelector((state) => state.display);\n  const changeVolume = (e) => {\n    const volume = e.target.value;\n    useDispatch({ type: \"VOLUME\", payload: volume });\n  };\n  return (\n    <Container id=\"drum-machine\" className=\"main\">\n      <div id=\"drum-pad-section\">\n        {sounds.map((sound, index) => (\n          <DrumPad\n            name={sound.name}\n            key={index}\n            letter={letters[index]}\n            index={index}\n            src={sound.src}\n          />\n        ))}\n      </div>\n      <div id=\"display\">{display}</div>\n      <div id=\"slider-container\">\n        <input\n          type=\"range\"\n          id=\"volume\"\n          name=\"volume\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.01\"\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,YAAY;AACnB,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACjB,MAAMC,MAAM,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACD,MAAM,CAACA,MAAM,CAAC;EAC1D,MAAME,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC7D,MAAMC,OAAO,GAAGX,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACE,OAAO,CAAC;EACrD,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAAAP,EAAA;IAC1B,MAAMQ,MAAM,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC7BjB,WAAW,CAAC;MAAEkB,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAEJ;IAAO,CAAC,CAAC;EAClD,CAAC;EAACR,EAAA,CAHIM,YAAY;IAAA,QAEhBb,WAAW;EAAA;EAEb,oBACEI,OAAA,CAACF,SAAS;IAACkB,EAAE,EAAC,cAAc;IAACC,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAC3ClB,OAAA;MAAKgB,EAAE,EAAC,kBAAkB;MAAAE,QAAA,EACvBb,MAAM,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBrB,OAAA,CAACL,OAAO;QACN2B,IAAI,EAAEF,KAAK,CAACE,IAAK;QAEjBC,MAAM,EAAEhB,OAAO,CAACc,KAAK,CAAE;QACvBA,KAAK,EAAEA,KAAM;QACbG,GAAG,EAAEJ,KAAK,CAACI;MAAI,GAHVH,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN5B,OAAA;MAAKgB,EAAE,EAAC,SAAS;MAAAE,QAAA,EAAEV;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjC5B,OAAA;MAAKgB,EAAE,EAAC,kBAAkB;MAAAE,QAAA,eACxBlB,OAAA;QACEc,IAAI,EAAC,OAAO;QACZE,EAAE,EAAC,QAAQ;QACXM,IAAI,EAAC,QAAQ;QACbO,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,GAAG;QACPC,IAAI,EAAC;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAC1B,GAAA,CAlCID,IAAI;EAAA,QACOJ,WAAW,EAEVA,WAAW;AAAA;AAAAmC,EAAA,GAHvB/B,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}