{"ast":null,"code":"var _jsxFileName = \"/Users/davidwisseh/Documents/drum-machine/src/components/drumPad.js\",\n  _s = $RefreshSig$();\nimport { Button } from \"react-bootstrap\";\nimport \"./drumpad.css\";\nimport $ from \"jquery\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrumPad = ({\n  letter,\n  index,\n  src,\n  name\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  let isOn = useSelector(state => state.on);\n  const volume = useSelector(state => state.volume);\n  const playSound = () => {\n    $(\"#button\" + index).addClass(\"active\");\n    setTimeout(() => {\n      $(\"#button\" + index).removeClass(\"active\");\n    }, 100);\n    console.log(isOn);\n    if (isOn) {\n      dispatch({\n        type: \"DISPLAY\",\n        payload: name\n      });\n      const audio = document.getElementById(letter);\n      audio.volume = volume;\n      audio.play().then(() => {\n        audio.currentTime = 0;\n      });\n    }\n  };\n  let fired = false;\n  $(document).on(\"keydown\", e => {\n    if (fired) return;\n    if (e.key.toUpperCase() === letter) {\n      fired = true;\n      playSound();\n    }\n  });\n  $(document).on(\"keyup\", e => {\n    if (!fired) return;\n    if (e.key.toUpperCase() === letter) {\n      fired = false;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"button\" + index,\n    type: \"button\",\n    className: \"btn drum-pad\",\n    onClick: () => {\n      playSound();\n    },\n    children: [letter, /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: letter,\n      typeof: \"audio/wav\",\n      className: \"drum-pad__audio clip\",\n      src: src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(DrumPad, \"HD1UbnOz/EQ0my0IM5kgDzTSZ3U=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = DrumPad;\nexport default DrumPad;\nvar _c;\n$RefreshReg$(_c, \"DrumPad\");","map":{"version":3,"names":["Button","$","useDispatch","useSelector","jsxDEV","_jsxDEV","DrumPad","letter","index","src","name","_s","dispatch","isOn","state","on","volume","playSound","addClass","setTimeout","removeClass","console","log","type","payload","audio","document","getElementById","play","then","currentTime","fired","e","key","toUpperCase","id","className","onClick","children","typeof","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/davidwisseh/Documents/drum-machine/src/components/drumPad.js"],"sourcesContent":["import { Button } from \"react-bootstrap\";\nimport \"./drumpad.css\";\nimport $ from \"jquery\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst DrumPad = ({ letter, index, src, name }) => {\n  const dispatch = useDispatch();\n  let isOn = useSelector((state) => state.on);\n  const volume = useSelector((state) => state.volume);\n  const playSound = () => {\n    $(\"#button\" + index).addClass(\"active\");\n    setTimeout(() => {\n      $(\"#button\" + index).removeClass(\"active\");\n    }, 100);\n\n    console.log(isOn);\n    if (isOn) {\n      dispatch({ type: \"DISPLAY\", payload: name });\n      const audio = document.getElementById(letter);\n      audio.volume = volume;\n      audio.play().then(() => {\n        audio.currentTime = 0;\n      });\n    }\n  };\n  let fired = false;\n  $(document).on(\"keydown\", (e) => {\n    if (fired) return;\n\n    if (e.key.toUpperCase() === letter) {\n      fired = true;\n      playSound();\n    }\n  });\n  $(document).on(\"keyup\", (e) => {\n    if (!fired) return;\n\n    if (e.key.toUpperCase() === letter) {\n      fired = false;\n    }\n  });\n\n  return (\n    <button\n      id={\"button\" + index}\n      type=\"button\"\n      className=\"btn drum-pad\"\n      onClick={() => {\n        playSound();\n      }}\n    >\n      {letter}\n      <audio\n        id={letter}\n        typeof=\"audio/wav\"\n        className=\"drum-pad__audio clip\"\n        src={src}\n      />\n    </button>\n  );\n};\n\nexport default DrumPad;\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,iBAAiB;AACxC,OAAO,eAAe;AACtB,OAAOC,CAAC,MAAM,QAAQ;AACtB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,OAAO,GAAGA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC,GAAG;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,IAAIW,IAAI,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,EAAE,CAAC;EAC3C,MAAMC,MAAM,GAAGb,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACE,MAAM,CAAC;EACnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBhB,CAAC,CAAC,SAAS,GAAGO,KAAK,CAAC,CAACU,QAAQ,CAAC,QAAQ,CAAC;IACvCC,UAAU,CAAC,MAAM;MACflB,CAAC,CAAC,SAAS,GAAGO,KAAK,CAAC,CAACY,WAAW,CAAC,QAAQ,CAAC;IAC5C,CAAC,EAAE,GAAG,CAAC;IAEPC,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;IACjB,IAAIA,IAAI,EAAE;MACRD,QAAQ,CAAC;QAAEW,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAEd;MAAK,CAAC,CAAC;MAC5C,MAAMe,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAACpB,MAAM,CAAC;MAC7CkB,KAAK,CAACT,MAAM,GAAGA,MAAM;MACrBS,KAAK,CAACG,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QACtBJ,KAAK,CAACK,WAAW,GAAG,CAAC;MACvB,CAAC,CAAC;IACJ;EACF,CAAC;EACD,IAAIC,KAAK,GAAG,KAAK;EACjB9B,CAAC,CAACyB,QAAQ,CAAC,CAACX,EAAE,CAAC,SAAS,EAAGiB,CAAC,IAAK;IAC/B,IAAID,KAAK,EAAE;IAEX,IAAIC,CAAC,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC,KAAK3B,MAAM,EAAE;MAClCwB,KAAK,GAAG,IAAI;MACZd,SAAS,CAAC,CAAC;IACb;EACF,CAAC,CAAC;EACFhB,CAAC,CAACyB,QAAQ,CAAC,CAACX,EAAE,CAAC,OAAO,EAAGiB,CAAC,IAAK;IAC7B,IAAI,CAACD,KAAK,EAAE;IAEZ,IAAIC,CAAC,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC,KAAK3B,MAAM,EAAE;MAClCwB,KAAK,GAAG,KAAK;IACf;EACF,CAAC,CAAC;EAEF,oBACE1B,OAAA;IACE8B,EAAE,EAAE,QAAQ,GAAG3B,KAAM;IACrBe,IAAI,EAAC,QAAQ;IACba,SAAS,EAAC,cAAc;IACxBC,OAAO,EAAEA,CAAA,KAAM;MACbpB,SAAS,CAAC,CAAC;IACb,CAAE;IAAAqB,QAAA,GAED/B,MAAM,eACPF,OAAA;MACE8B,EAAE,EAAE5B,MAAO;MACXgC,MAAM,EAAC,WAAW;MAClBH,SAAS,EAAC,sBAAsB;MAChC3B,GAAG,EAAEA;IAAI;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAAChC,EAAA,CAvDIL,OAAO;EAAA,QACMJ,WAAW,EACjBC,WAAW,EACPA,WAAW;AAAA;AAAAyC,EAAA,GAHtBtC,OAAO;AAyDb,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}